[{"content":"New paper out Back in 2018 Aila, Claudia, Martina and I wrote a review piece listing the kind of statistics people use to describe directional structures in spatial point patterns (Rajala et al. 2018). Our plan was to gather what we could find into one toolbox, and then compare the tools with respect to statistical power, ease of use, and other such user-relevant metrics.\nAs we compiled and parsed the sparse literature, it became clear to us that due to the ambiguity of the null-hypothesis, a general test procedure for testing isotropy is probably always going to be a poorly defined construct. A point process can be isotropic only one way, but anisotropic in infinitely many ways. The process and the anisotropy mechanism might not be possible to separate, in general. A more specific problem is getting to the null-distribution of a chosen test statistics. Sampling from $H_0$ under assumed isotropic generating model would be an option, but then we must ask how such a thing could be estimated under $H_1$? A geometric anisotropy mechanism would distort range parameter estimates, for example. An alternative is to side-step the model and emulate interesting parts of the process as if it where isotropic (Wong and Chiu 2016). But here again the distortion would muddle the waters. Perhaps it is best to go back to the field and collect more replicates (Redenbach et al. 2009).\nSince we are academics and don‚Äôt like going to the fields, it is perfectly sensible for us to still compare the plethora of proposed statistics, i.e.¬†the numbers we compute from the patterns, using simulations. We simply set the truth, say model $\\mathbf{x}_0\\sim M_0$m, from which we observe data patterns ${\\mathbf{x}\\ }$ that have been pushed trough some anisotropy-inducing transformations $T:{\\mathbf{x}_0}\\mapsto{\\mathbf{x}}$. Since we know $M_0$, we have access to every null-model related quantity we need. Particularly, for any summary statistics that claims to measure anisotropy, we can compute its statistical power. Repeat for many statistics, apply to many, many models and transformations, and four years later we arrive to what we used to call the ‚ÄúBattle Paper‚Äù (Rajala et al. 2022).\nResults in brief(s) To roughly cover enough interesting types of patterns, in addition to the usual suspects of geometrically anisotropic Strauss and Thomas processes (heavily modified to have better control of point counts etc) we also included patterns with clear linear features, and a somewhat debatably relevant (non-stationary) patterns with single dense ridge running through the region. We included varying levels of point counts and strenghts of anisotropy, and computed most of the statistics described in the review paper. The end result was a very long list of powers that needed to be sifted for information.\nThe figure below gives the TL;DR, which is pretty much what one would expect when it comes to statistical power and point patterns: Pairwise stuff is more powerful than nearest neighbour stuff; Simple stuff is more powerful than complicated stuff. Various K-functions are pretty solid option almost always, and what flavour one chooses is more or less up to you, as long as you get the tuning parameters (opening angles, mostly) right. More details in the paper.\nFigure 1: Overall results of the simulation trials. For each anisotropy summary, the gray points, with shape by model, give the best power over tuning parameters, integration limits, and tests. The large dot is the mean over all powers. (Figure 10 in the paper)\rAll the calculated statistics, and more what we discussed in the review paper but not in the battle paper, have been implemented (at varying degrees) in the R-package Kdirectional.\nReferences Rajala, T., C. Redenbach, A. S√§rkk√§, and M. Sormani. 2018. ‚ÄúA Review on Anisotropy Analysis of Spatial Point Patterns.‚Äù Spatial Statistics 28 (December): 141‚Äì68. https://doi.org/10.1016/j.spasta.2018.04.005.\n‚Äî‚Äî‚Äî. 2022. ‚ÄúTests for Isotropy in Spatial Point Patterns A Comparison of Statistical Indices.‚Äù Spatial Statistics 52 (December): 100716. https://doi.org/10.1016/j.spasta.2022.100716.\nRedenbach, Claudia, Aila S√§rkk√§, Johannes Freitag, and Katja Schladitz. 2009. ‚ÄúAnisotropy Analysis of Pressed Point Processes.‚Äù AStA Advances in Statistical Analysis 93 (3): 237‚Äì61. https://doi.org/10.1007/s10182-009-0106-5.\nWong, Ka Yiu, and Sung Nok Chiu. 2016. ‚ÄúIsotropy Test for Spatial Point Processes Using Stochastic Reconstruction.‚Äù Spatial Statistics 15 (February): 56‚Äì69. https://doi.org/10.1016/j.spasta.2015.12.002.\n","permalink":"https://antiphon.github.io/blog/2023-02-06-anisotropic-news/","summary":"New paper out Back in 2018 Aila, Claudia, Martina and I wrote a review piece listing the kind of statistics people use to describe directional structures in spatial point patterns (Rajala et al. 2018). Our plan was to gather what we could find into one toolbox, and then compare the tools with respect to statistical power, ease of use, and other such user-relevant metrics.\nAs we compiled and parsed the sparse literature, it became clear to us that due to the ambiguity of the null-hypothesis, a general test procedure for testing isotropy is probably always going to be a poorly defined construct.","title":"Anisotropic news"},{"content":"Task Make an interactive map (HTML widget) where the Coordinate Reference System (CRS) of the map is the official CRS used by Finnish institutes, TM35FIN / EPSG:3067.\nDefine the target CRS and Mercator EPSG codes to be used later.\ncrs_fin \u0026lt;- 3067 crs_ll \u0026lt;- 4326 We will use these libraries.\nlibrary(sf) library(leaflet) library(tmap) library(geofi) Preliminaries Example data: Polygons To have some data to depict and check the output, we fetch the municipalities of Finland using the geofi package.\nmun \u0026lt;- geofi::get_municipalities() ## Requesting response from: http://geo.stat.fi/geoserver/wfs?service=WFS\u0026amp;version=1.0.0\u0026amp;request=getFeature\u0026amp;typename=tilastointialueet%3Akunta4500k_2022 ## Warning: Coercing CRS to epsg:3067 (ETRS89 / TM35FIN) ## Data is licensed under: Attribution 4.0 International (CC BY 4.0) Example basemap that supports the target CRS Most likely the data is to plotted on top of some kind of a basemap, also known as a theme map or layer. A typical basemap service is of the type Web Map Service (WMS) or Web Map Tile Service (WMTS), and provides pre-rendered pixel-images known as tiles. These tiles are fast to download and are to be stiched together as the background map by the rendering engine. The images usually come in the unprojected lon-lat, Mercator CRS.\nAn example of a WMTS service provider that supports the Finnish goverment CRS is the National Land Survey of Finland, or Maanmittauslaitos (MML). Details of their open data services can be found at https://www.maanmittauslaitos.fi/karttakuvapalvelu. The English side is not complete, so try to parse the details from the Finnish pages.\nTo use this WMTS provider, a free API key is needed. I\u0026rsquo;ve stored my key in the environmental variable MML_API_KEY, defined in the local ~/.Rprofile . See Sys.setenv help page for doing this.\nTo use the custom WMTS, we define a url-template string that describes the service in a way that the leaflet-engine can request the tiles.\nmml_key \u0026lt;- Sys.getenv(\u0026#34;MML_API_KEY\u0026#34;) # use your own here. # url template; From an example umml_fin \u0026lt;- \u0026#34;https://avoin-karttakuva.maanmittauslaitos.fi/avoin/wmts/1.0.0/taustakartta/default/ETRS-TM35FIN/{z}/{y}/{x}.png\u0026#34; # Augment the template with the api key umml \u0026lt;- sprintf(\u0026#34;%s?api-key=%s\u0026#34;,umml_fin, mml_key) Note the \u0026ldquo;ETRS-TM35FIN\u0026rdquo; string. This is where we request the tiles to be in the target projection. The other interesting string is \u0026ldquo;taustakartta\u0026rdquo;, which defines the layer we want. \u0026ldquo;selkokartta\u0026rdquo; and \u0026ldquo;maastokartta\u0026rdquo; would be alternatives, see ^[https://www.maanmittauslaitos.fi/karttakuvapalvelu/tekninen-kuvaus-wmts].\nNote: I think this is not clean WMTS, more like WMS, but I\u0026rsquo;ve not found a way to make leaflet-package support the full WMTS ü§∑\nMaking the CRS understandable by leaflet leaflet assumes that all input data are in EPSG:3867 Web Mercator CRS ^[https://rstudio.github.io/leaflet/projections.html]. The list of basemap provides all default to this CRS, and will not work with the target projection.\nOther projections can be used, but the CRS need to be specified manually. Let us define the target CRS in a format that leaflet (and derivatives) understands. The specification is entagled with the properties of the tile service, particularly the resolution and the origin of the tile mosaics, so adjust accordingly. We need to\nUse the Proj4-string syntax. This string we get from https://epsg.io/3067 (scroll down therein). The resolution (meters-to-pixels) and the origin (top-left corner) of the tile service The CRS information, to be used with the MML tiles, is then compiled like so:\nlcrs \u0026lt;- leafletCRS(crsClass = \u0026#34;L.Proj.CRS\u0026#34;, code = \u0026#34;EPSG:3067\u0026#34; , # just a name tag proj4def = \u0026#34;+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\u0026#34;, origin = c(-548576, 8388608), # This is MML basemap related resolutions = 2^(13:-1) # This is MML basemap related ) The origin and resolution details were found in a technical document provide by MML ^[https://www.suomidigi.fi/sites/default/files/2020-07/JHS180_liite1.doc].\nInteractive map using leaflet The projection information is now ready to be applied to a map. First though: leaflet expects all input data to be in lon-lat, so we need to first transform the data to be shown. The back-transformation to the target CRS will take place inside leaflet code when rendered.\nmun_ll \u0026lt;- sf::st_transform(mun, crs_ll) We can now produce the map. The target CRS for output is provided in the options parameter.\nleaflet(mun_ll, options = leafletOptions(crs = lcrs) ## Here is the main thing, will project data ) |\u0026gt; # add the basemap, now already in the target CRS addTiles( urlTemplate = umml ) |\u0026gt; # then draw the example data addPolygons(fillColor = ~colorFactor(\u0026#34;viridis\u0026#34;, domain = 1:16)(ely_code), popup = ~name, weight = 2, highlightOptions = highlightOptions(color = \u0026#34;red\u0026#34;, bringToFront = TRUE) ) |\u0026gt; setView(lng = 25, lat = 68, zoom = 3) # lon-lat again The projection is now correct.\ntmap example, uses leaflet If the above example for leaflet worked, we should be able to also use tmap, which provides a higher level functionality for producing maps.\n# Set interactive mode tmap_mode(\u0026#34;view\u0026#34;) tm_shape(mun_ll) + tm_view(projection = lcrs, # here is the main thing, will project data set.view = c(lon = 25, lat = 68, zoom = 3) # lon-lat again ) + tm_basemap(server = umml) + tm_borders() + tm_fill(col = \u0026#34;ely_name_fi\u0026#34;, alpha = .8, legend.show = FALSE, id = \u0026#34;name\u0026#34;, popup.vars = c(\u0026#34;name\u0026#34;, \u0026#34;ely_name_fi\u0026#34;) ) Note that while writing this example the tm_shape data needed to be in lat-lon too if using a custom CRS basemap provider. I think this is because when manipulating the CRS using tm_view, the data is automatically re-projected from assumed lon-lat regardless of the data CRS.\n","permalink":"https://antiphon.github.io/blog/2022-07-15-r-leaflet-and-mml-tiles-changing-the-output-crs/","summary":"Task Make an interactive map (HTML widget) where the Coordinate Reference System (CRS) of the map is the official CRS used by Finnish institutes, TM35FIN / EPSG:3067.\nDefine the target CRS and Mercator EPSG codes to be used later.\ncrs_fin \u0026lt;- 3067 crs_ll \u0026lt;- 4326 We will use these libraries.\nlibrary(sf) library(leaflet) library(tmap) library(geofi) Preliminaries Example data: Polygons To have some data to depict and check the output, we fetch the municipalities of Finland using the geofi package.","title":"R, leaflet, and MML tiles: Changing the output CRS"},{"content":"Trying out blogdown again, this time with the intention of migrating the site under Github pages. As usual, some tweaks are needed to make Hugo themes work with R and blogdown.\nI chose the PaperModX as the Hugo theme after trying out the PaperMod and liking the look but finding it difficult to edit. I tried some others, mainly Anatole and Ap√©ro, but the PaperMod was at a more suitable balance of simple looks and rich in features for me.\nThis post by Alison Hill was helpful (ignoring the torrent of animated gifs). Note that many posts related to blogdown and Hugo are outdated, with configuration styles that do not apply etc etc. See the blogdown 1.0 announcement for examples of major changes.\nWhat follows is a list of tweaks needed to make my old posts migrate reasonably painlessly.\nAdd support for maths Add math.html to layout/partials subdir. See the second code snippet at KaTeX site what to add Add to extended_head.html in the same directory {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} then add to global config params: math: true And we should have $\\alpha, \\beta, \\Gamma(x^2), \\ldots$ Add support for maths AND syntax highlighting Set the highlighting settings in the Hugo config, for example add to config.yaml markup: highlight: lineNos: false noClasses: false guessSyntax: true Note that style-variable is not supported, and changing the light/dark themes need to be manually edited. See here for details.\nTell blogdown to a) not use pandoc but instead render to markdown in order to go via Rmd$\\rightarrow$md$\\rightarrow$hugo html route for the highlight.js to kick in properly b) to not backtick maths in the output .md\u0026rsquo;s. Do these by modifying .Rprofile settings thusly: options( # ... blogdown.method = \u0026#39;markdown\u0026#39;, blogdown.protect.math = FALSE ) Rerender all Rmd files :/ Fix missing figures and tables due to \u0026ldquo;raw html omitted\u0026rdquo; R-markdown creates html-snippets for example including figures, out of plotting or just knitr::include_graphics. Hugo omits those bits, unless we set in the config.yaml\nmarkup: goldmark: renderer: unsafe: true Copy svg icon for Orcid from PaperMod add to svg.toml: orcid = \u0026#39;\u0026#39;\u0026#39; \u0026lt;svg width=\u0026#34;24\u0026#34; height=\u0026#34;24\u0026#34; viewBox=\u0026#34;0 0 256 256\u0026#34; fill=\u0026#34;none\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34;\u0026gt; \u0026lt;path fill-rule=\u0026#34;evenodd\u0026#34; clip-rule=\u0026#34;evenodd\u0026#34; d=\u0026#34;M128 256C198.7 256 256 198.7 256 128C256 57.3 198.7 0 128 0C57.3 0 0 57.3 0 128C0 198.7 57.3 256 128 256ZM70.9 186.2H86.3V127.5V79.0999H70.9V186.2ZM108.9 79.0999H150.5C190.1 79.0999 207.5 107.4 207.5 132.7C207.5 160.2 186 186.3 150.7 186.3H108.9V79.0999ZM124.3 172.4H148.8C183.7 172.4 191.7 145.9 191.7 132.7C191.7 111.2 178 93 148 93H124.3V172.4ZM78.6 66.8999C84.2 66.8999 88.7 62.2999 88.7 56.7999C88.7 51.2999 84.2 46.7 78.6 46.7C73 46.7 68.5 51.2 68.5 56.7999C68.5 62.2999 73 66.8999 78.6 66.8999Z\u0026#34; fill=\u0026#34;currentColor\u0026#34; /\u0026gt; \u0026lt;/svg\u0026gt; \u0026#39;\u0026#39;\u0026#39; Footnotes: no more inline footnote-ness Render engine is different, so inline footnotes like this blaa blaa^[they said] won\u0026rsquo;t work: blaa blaa ^[they said]. Instead, one needs to go through the tag-ref way of blaa blaa[^tag] and write the description [^tag]: they said somewhere, like this : blaa blaa1.\nDisqus Two steps, following https://reorx.github.io/hugo-PaperModX/docs/features/#comments and https://gohugo.io/content-management/comments/:\nAdd to config.yaml disqusShortname: yourDisqusShortname params: comments: true Create ./layouts/partials/comments.html with the content {{ template \u0026#34;_internal/disqus.html\u0026#34; . }} they said\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://antiphon.github.io/blog/2022-06-17-blogdown-update-2022/","summary":"Trying out blogdown again, this time with the intention of migrating the site under Github pages. As usual, some tweaks are needed to make Hugo themes work with R and blogdown.\nI chose the PaperModX as the Hugo theme after trying out the PaperMod and liking the look but finding it difficult to edit. I tried some others, mainly Anatole and Ap√©ro, but the PaperMod was at a more suitable balance of simple looks and rich in features for me.","title":"Blogdown update 2022"},{"content":"A quick note on fetching Finland\u0026rsquo;s natural protection area -data (luonnonsuojeluealueet) from Syke\u0026rsquo;s servers into R.\nRequirements:\nlibrary(sf) library(dplyr) library(ggplot2) # Optional: Polygonal Finland for reference. Provide your own. fin \u0026lt;- st_geometry( st_as_sf( suomi::finland_polygons$sp_hires ) ) Task: Compile a set of all natural protected areas in Finland. Use the simple features-format.\nDownload data The website for the data is https://www.syke.fi/fi-FI/Avoin_tieto/Paikkatietoaineistot/Ladattavat_paikkatietoaineistot (2020-02-27). The download links are a bit different.\n# The target zips types \u0026lt;- c(\u0026#34;eramaa\u0026#34;, \u0026#34;valtio\u0026#34;, \u0026#34;yksityinen\u0026#34;) urlf \u0026lt;- \u0026#34;http://wwwd3.ymparisto.fi/d3/gis_data/spesific/luonnonsuojelualueet_%s.zip\u0026#34; paths \u0026lt;- list() for(ty in types){ tmp \u0026lt;- tempfile() url \u0026lt;- sprintf(urlf, ty) download.file(url, tmp) unzip(tmp, exdir = path \u0026lt;- paste0(tempdir(),\u0026#34;/\u0026#34;, ty)) paths[[ty]] \u0026lt;- path } Then we read the shape-files in, make sure coordinate system is what we want, add an identifier for type of area, and compile:\n# Target CRS is ETRS89 \\ TM35FIN. The data should already be in that. crs \u0026lt;- \u0026#34;+init=epsg:3067\u0026#34; # read the shapes as sf polyl \u0026lt;- lapply(types, function(ty){ x \u0026lt;- st_read(paths[[ty]], quiet = TRUE) x \u0026lt;- st_transform(x, crs) x$suojeluRyhma \u0026lt;- ty x }) # Then rbind areas \u0026lt;- do.call(rbind, polyl) We now got a bunch of polys.\ndim(areas) ## [1] 15774 29 format(object.size(areas), \u0026#34;Mb\u0026#34;) ## [1] \u0026#34;136.7 Mb\u0026#34; Some checks According to the data all areas are currently active:\ntable(areas$Olotila) ## ## Voimassa ## 15774 Some stats:\nareas %\u0026gt;% as.data.frame() %\u0026gt;% group_by(suojeluRyhma) %\u0026gt;% summarise(mean_area_km2 = mean(Shape_STAr)/1000^2, n = n()) ## # A tibble: 3 √ó 3 ## suojeluRyhma mean_area_km2 n ## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; ## 1 eramaa 1241. 12 ## 2 valtio 19.0 1090 ## 3 yksityinen 0.259 14672 Private ones are very small, wilderness massive.\nSimplifying is easy with the sf classes:\nareass \u0026lt;- st_simplify(areas, dTolerance = 400, preserveTopology = TRUE) format(object.size(areass), \u0026#34;Mb\u0026#34;) ## [1] \u0026#34;25.9 Mb\u0026#34; Example:\nplot(st_geometry( areas[1,]), col = 2, border=NA) plot(st_geometry(areass[1,]), add=T) When where the areas established? According to meta-docs for the files, VoimaantuloPvm should describe when the protection started. But many have filler date with year 9999,\nvyears \u0026lt;- format(as.POSIXct( areas$Voimaantul , format = \u0026#34;%Y/%m/%d\u0026#34; ), \u0026#34;%Y\u0026#34;) table(vyears \u0026gt; \u0026#34;2025\u0026#34;) ## ## FALSE TRUE ## 4139 11635 Let\u0026rsquo;s assume PaatPvm (date of the decision) is a better starting time. Some are still missing here, though:\npyears \u0026lt;- format(as.POSIXct( areas$PaatPvm, format = \u0026#34;%Y/%m/%d\u0026#34; ), \u0026#34;%Y\u0026#34;) nostart \u0026lt;- pyears == \u0026#34;9999\u0026#34; table(paat= nostart, voim=vyears==\u0026#34;9999\u0026#34;) ## voim ## paat FALSE TRUE ## FALSE 4140 11596 ## TRUE 0 38 odd \u0026lt;- st_geometry( areas[ nostart,]) plot(fin) plot( odd, add = TRUE, col = \u0026#34;red\u0026#34;) plot( st_as_sfc(st_bbox(odd)), add = TRUE) Seems they only exist in √Öland area and or are very small. Let\u0026rsquo;s forget them for now\nareas1 \u0026lt;- areass[!nostart,] %\u0026gt;% mutate(start = as.Date( PaatPvm, format = \u0026#34;%Y/%m/%d\u0026#34; ), start_year = format(start, \u0026#34;%Y\u0026#34;)) areas1 %\u0026gt;% ggplot() + geom_histogram(aes(start, fill = suojeluRyhma), position = position_dodge2(width=1)) Seems like a lot of private areas have been established since late 1990s.\nArea establishment over time Split by starting time, and plot.\n# adhoc groups areas1 \u0026lt;- areas1 %\u0026gt;% mutate( start_group = cut(as.integer(start_year), c(0, 1950, 1980, 1990, 2000, 2010, 2020, 2050), c(\u0026#34;\u0026lt;1950\u0026#34;, \u0026#34;1950-1980\u0026#34;, \u0026#34;1980s\u0026#34;, \u0026#34;1990s\u0026#34;, \u0026#34;2000s\u0026#34;, \u0026#34;2010s\u0026#34;, \u0026#34;2020-\u0026gt;\u0026#34;)) ) areas1 %\u0026gt;% ggplot() + geom_sf(data = fin, col = \u0026#34;white\u0026#34;) + geom_sf(aes(fill = suojeluRyhma, col = suojeluRyhma)) + facet_wrap(~start_group, nrow=2) areas1 %\u0026gt;% as.data.frame() %\u0026gt;% group_by(suojeluRyhma, start_group) %\u0026gt;% summarise(mean_area_km2 = mean(Shape_STAr)/1000^2, n = n()) %\u0026gt;% tidyr::gather(s, v, mean_area_km2:n) %\u0026gt;% ggplot(aes(start_group, v, col = suojeluRyhma)) + geom_point() + facet_grid(s~suojeluRyhma, scale=\u0026#34;free_y\u0026#34;) + theme(axis.text.x=element_text(angle=45,hjust=1)) Areas outside mainland Several areas don\u0026rsquo;t hit land:\noutside \u0026lt;- sapply(st_intersects(areas1, fin |\u0026gt; st_transform(crs)) , length) == 0 areasout \u0026lt;- areas1[outside,] table(as.character( areasout$TyyppiNimi), useNA=\u0026#34;i\u0026#34; ) ## ## Erityisesti suojeltavan lajin suojelualue (ERA; LsL 47 ¬ß) ## 31 ## Kansallispuisto ## 3 ## Lehtojensuojelualue ## 2 ## Luontotyypin suojelualue (LTA; LsL 29 ¬ß) ## 136 ## Muu luonnonsuojelualue (MH) ## 42 ## M√§√§r√§aikainen rauhoitusalue (MRA; LsL 25 ¬ß) ## 6 ## Soidensuojelualue ## 1 ## Vanhojen metsien suojelualue ## 3 ## Yksityismaiden luonnonsuojelualue (YSA) ## 1608 Some are special species-protection areas (e.g. seal).\n","permalink":"https://antiphon.github.io/blog/natural-protection-areas-in-finland-into-r/","summary":"A quick note on fetching Finland\u0026rsquo;s natural protection area -data (luonnonsuojeluealueet) from Syke\u0026rsquo;s servers into R.\nRequirements:\nlibrary(sf) library(dplyr) library(ggplot2) # Optional: Polygonal Finland for reference. Provide your own. fin \u0026lt;- st_geometry( st_as_sf( suomi::finland_polygons$sp_hires ) ) Task: Compile a set of all natural protected areas in Finland. Use the simple features-format.\nDownload data The website for the data is https://www.syke.fi/fi-FI/Avoin_tieto/Paikkatietoaineistot/Ladattavat_paikkatietoaineistot (2020-02-27). The download links are a bit different.\n# The target zips types \u0026lt;- c(\u0026#34;eramaa\u0026#34;, \u0026#34;valtio\u0026#34;, \u0026#34;yksityinen\u0026#34;) urlf \u0026lt;- \u0026#34;http://wwwd3.","title":"Natural protection areas in Finland into R"},{"content":"Hirst\u0026rsquo;s Valium and the Golden ratio The artist Damien Hirst has a painting called Valium (2000) (¬£6k-8k at Christie\u0026rsquo;s) which is based on a geometrically repeating pattern coupled with randomised colors. The pattern of locations resembles that found in a sun flower, and has a beautiful connection to the golden ratio. Numberphile has a video that explains the maths quite nicely, let\u0026rsquo;s demostrate the idea here.\nThe priciple is to add dots around a center with a constant rotational step while moving further out each round. let\u0026rsquo;s write a script that does that:\ngenerator \u0026lt;- function( frac = 2, # fraction of a round per turn its = 100 # do this many rounds ){ turn \u0026lt;- 2*pi / frac # turn angle each step, radians it \u0026lt;- 1 # which rotation are we at ang \u0026lt;- 0 # # Points in polars, first location r \u0026lt;- 1 i \u0026lt;- 1 # iterator while(TRUE) { newang \u0026lt;- turn + ang[i] if(newang \u0026gt;= 2*pi){ # have we done full round? it \u0026lt;- it + 1 if(it \u0026gt; its) break # stop r[i+1] \u0026lt;- r[i] + 1 } else { r[i+1] \u0026lt;- r[i] } ang[i+1] \u0026lt;- newang %% (2*pi) i \u0026lt;- i+1 } # In Cartesian x \u0026lt;- r * cos(ang) y \u0026lt;- r * sin(ang) cbind(x = x, y = y, r = r, ang = ang) } # shorthand generate + plot plop \u0026lt;- function(frac, its, ..., main = 1/frac) { lim \u0026lt;- c(-1,1)*( its + 1) plot(generator(frac, its), axes=FALSE, asp = 1, xlim = lim, ylim =lim, main = main, ...) points(0,0,pch=3) } We can now illustrate that if the turn is a rational fraction of a circle, we get a repeating pattern. Example:\nfracs \u0026lt;- c(2, 3, 5, 10) par(mfrow = c(2,2), mar = c(1,1,1,1)) for(f in fracs) plop(f, its = 20) So when the fraction is 1/5 we will have 5 spokes, for example.\nThe interesting thing is that when the fraction becomes less like a rational number, the pattern becomes more and more staggered. Repeating the example in the Numberphile video where we are close to the fraction 1/3:\nfracs \u0026lt;- (3 + seq(-1,1, l = 7)*.01)[-1] par(mfrow = c(2,3), mar = c(1,1,2,1)) for(f in fracs) plop(f, its = 200) Figure 1: Fractions near 1/3\nIn the video the golden ration $\\phi=\\frac{1 + \\sqrt{5}}{2}\\approx 1.61808$ is argued to be\u0026quot;the most irrational number\u0026quot; because it is hardest to approximate with a rational number. The maths is not hard to understand, but to just illustrate the property discussed in the video, let\u0026rsquo;s see some irrational numbers alongside the golden ratio:\ngr \u0026lt;- (1+sqrt(5))/2 fracs \u0026lt;- list(\u0026#34;pi\u0026#34;= pi, \u0026#34;Sqrt 2\u0026#34;= sqrt(2), \u0026#34;Golden ratio\u0026#34;= gr) par(mfrow = c(1,3), mar = c(1,1,1,1)) for(i in names(fracs)) plop(fracs[[i]], its = 500, main = i, cex = .5) It is quite clear how $\\pi$\u0026rsquo;s pattern has that spokiness of rational numbers, and this is because it can be approximated with a rational number quite well (viz. Figure 1 above). $\\sqrt{2}$ is a bit more mixed up but starts to show spokes as we get further out. The golden ratio is clearly the least spoky and keeps at it the furthest out. Note also the resemblance to the sun flower.\nSpot paintings Returning to the paintings by Damien Hirst, we can now mimic the Valium painting pattern as it is quite obviously based on the golden ratio.\nFirst, let\u0026rsquo;s adjust the radius of each dot, as otherwise the pattern is visually too packed near the center and thins out the further we go. To do this we transform each point\u0026rsquo;s distance from the center by taking the square-root of it, which will keep the intensity of the points per unit area constant (proof available somewhere). Then we decorate with the famous random colors, and just as a final touch we add some noise to mimic the imperfect human hand:\nset.seed(1) x \u0026lt;- generator(gr, 700) ang \u0026lt;- x[,4] newr \u0026lt;- sqrt( x[,3] ) xy \u0026lt;- cbind( newr * cos(ang), newr*sin(ang) ) # add some noise xy \u0026lt;- xy + runif(length(xy), -.1, .1) # Pick colors: col \u0026lt;- sample(colors(), nrow(xy), replace = TRUE) # we are done: par(mar=c(1,1,1,1), mfrow=c(1,1)) plot(xy, asp = 1, pch = 19, col = col, axes=F, cex= 1) Figure 2: Author's rendition\nFor reference, here is the original by Hirst (from WikiArt):\nFigure 3: Hirst: Valium (from Wikiart)\nI don\u0026rsquo;t have ¬£7k or anything like that floating about, but I\u0026rsquo;m pretty sure that when I want random spots on a white canvas to decorate my flat with, I can figure out a sufficient substitute.\n","permalink":"https://antiphon.github.io/blog/golden-ratio-of-valium/","summary":"Hirst\u0026rsquo;s Valium and the Golden ratio The artist Damien Hirst has a painting called Valium (2000) (¬£6k-8k at Christie\u0026rsquo;s) which is based on a geometrically repeating pattern coupled with randomised colors. The pattern of locations resembles that found in a sun flower, and has a beautiful connection to the golden ratio. Numberphile has a video that explains the maths quite nicely, let\u0026rsquo;s demostrate the idea here.\nThe priciple is to add dots around a center with a constant rotational step while moving further out each round.","title":"Golden ratio of Valium"}]